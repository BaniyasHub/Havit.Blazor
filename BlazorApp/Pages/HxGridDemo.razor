@page "/HxGridDemo"

<h1>HxGrid</h1>

<h2>Client paging, auto sorting</h2>
<HxGrid Items="@localCultureInfos" @bind-SelectedDataItem="@currentLocalCultureInfo" PageSize="@PageSize">
	<Columns>
		<HxGridColumn TItemType="System.Globalization.CultureInfo" HeaderText="Display Name" ItemTextFunc="@(item => item.DisplayName)" SortExpression="@(item => item.DisplayName)" IsDefaultSort="true" />
		<HxGridColumn TItemType="System.Globalization.CultureInfo" HeaderText="Name" ItemTextFunc="@(item => item.Name)" SortExpression="@(item => item.Name)" ItemCssClassFunc="@(item => item.Name.Contains('Z') ? "text-right" : null)" />
		<HxGridColumn TItemType="System.Globalization.CultureInfo" HeaderText="Link">
			<ItemTemplate>
				<a href="https://www.havit.cz">link to a page</a>
				<HxButton Text="Go" />
			</ItemTemplate>
		</HxGridColumn>
	</Columns>
	<ContextMenu>
		<HxContextMenu>
			<HxContextMenuItem Title="Nastavit jako výchozí" />
		</HxContextMenu>
	</ContextMenu>
</HxGrid>
<p>Current CultureInfo: @currentLocalCultureInfo?.DisplayName</p>

<h2>Server paging, server sorting</h2>
<HxGrid TItemType="System.Globalization.CultureInfo" Items="@serverCultureInfos" @bind-SelectedDataItem="@currentServerCultureInfo" TotalItemsCount="@totalItemsCount" DataReloadRequired="@HandleDataReloadRequired" PageSize="@PageSize" AutoSort="false">
	<Columns>
		<HxGridColumn TItemType="System.Globalization.CultureInfo" HeaderText="Display Name" ItemTextFunc="@(item => item.DisplayName)" SortString="@nameof(System.Globalization.CultureInfo.DisplayName)" IsDefaultSort="true" />
		<HxGridColumn TItemType="System.Globalization.CultureInfo" HeaderText="Name" ItemTextFunc="@(item => item.Name)" SortString="@nameof(System.Globalization.CultureInfo.Name)" />
	</Columns>
</HxGrid>
<p>Current CultureInfo: @currentServerCultureInfo?.DisplayName</p>

@code {
	private const int PageSize = 10;

	// LOCAL
	private List<System.Globalization.CultureInfo> localCultureInfos = System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes.SpecificCultures).ToList();
	private System.Globalization.CultureInfo currentLocalCultureInfo = null;

	// SERVER SIDE (simulation)
	private List<System.Globalization.CultureInfo> serverCultureInfos = null;
	private System.Globalization.CultureInfo currentServerCultureInfo = null;
	private int totalItemsCount;

	private void HandleDataReloadRequired(GridUserState<System.Globalization.CultureInfo> userState)
	{
		totalItemsCount = localCultureInfos.Count();
		localCultureInfos.Sort(userState.CurrentSorting.ToGenericPropertyComparer());
		serverCultureInfos = localCultureInfos
			.Skip(userState.CurrentPageIndex * PageSize)
			.Take(PageSize)
			.ToList();
	}
}