<div class="row">
    <div class="col-4" style="height: 400px">
        <HxTreeView
            TValue="Directory"
            OnItemSelected="@(p => selectedDirectory = p)"
            Items="@fileSystem"
			CssClass="border rounded p-2"
            ContentSelector="@(p => p.Name)"
            ChildrenSelector="@(p => p.Subdirectories)"
            IconSelector="@(p => p.Icon)"/>
    </div>
    <div class="col-4">
        @if (selectedDirectory == null)
        {
            <p>No directory selected.</p>
        }
        else
        {
            <p>Directory <b>@selectedDirectory.Name</b> selected.</p>
        }
    </div>
</div>

@code {
	private Directory selectedDirectory;
	private Directory[] fileSystem;

	protected override void OnInitialized()
	{
		fileSystem = new[]
		{
			new Directory("C:\\", nameof(BootstrapIcon.Folder))
			{
				Subdirectories = new[]
				{
					new Directory("Program Files", nameof(BootstrapIcon.Gem))
					{
						Subdirectories = new[] { new Directory("Visual Studio 2022"), new Directory("Rider 2021.3"), new Directory("VS Code"), new Directory("Borland Pascal") }
					},
					new Directory("Users", nameof(BootstrapIcon.Person))
					{
						Subdirectories = new[] { new Directory("Vladimir"), new Directory("Jhosav"), new Directory("Ben"), new Directory("Admin") }
					},
					new Directory("Data", nameof(BootstrapIcon.Person))
					{
						Subdirectories = new[] { new Directory("Open Office"), new Directory("Git", nameof(BootstrapIcon.Magic)), new Directory("Autocad") }
					},
				}
			},
			new Directory("D:\\", BootstrapIcon.Folder2.Name)
			{
				Subdirectories = new[]
				{
					new Directory("Games", nameof(BootstrapIcon.Play))
					{
						Subdirectories = new[] { new Directory("Cyberpunk 2077"), new Directory("The Witcher 3"), new Directory("Tetris"), new Directory("Little Big Adventure 2: Twinsen's Odyssey") }
					},
					new Directory("Music", nameof(BootstrapIcon.FileMusic))
					{
						Subdirectories = new[] { new Directory("Queen"), new Directory("Metallica"), new Directory("AC/DC") }
					}
				}
			}
		};
	}

	public class Directory
	{
		public Directory(string name, string icon = null, string message = null, ThemeColor? severity = null)
		{
			Name = name;
			Icon = icon;
			Message = message;
			Severity = severity;
		}

		public string Name { get; }

		public string Icon { get; set; }

		public string Message { get; set; }

		public ThemeColor? Severity { get; set; }

		public Directory[] Subdirectories { get; set; }
	}

}