<EditForm Model="@model">
	<DataAnnotationsValidator />

	<HxInputText Label="Text" @bind-Value="@model.Text" Placeholder="Enter text here.">
		<HintTemplate>
			Enter text, value is shared with all text inputs.
		</HintTemplate>
	</HxInputText>

	<HxInputText Label="Text (oninput)" @bind-Value="@model.Text" BindEvent="BindEvent.OnInput">
		<HintTemplate>
			Value is updated on input event.
		</HintTemplate>
	</HxInputText>

	<HxInputText Label="Text (disabled)" IsEnabled="false" @bind-Value="@model.Text" />
	<HxInputText Label="Text (password)" Type="InputType.Password" @bind-Value="@model.Text" />

	<HxInputTextArea Label="TextArea" @bind-Value="@model.Text" />

	<HxInputNumber Label="Integer" @bind-Value="@model.IntegerValue" ParsingErrorMessage="Fix integer value." />
	<HxInputNumber Label="Integer (nullable)" @bind-Value="@model.NullableIntegerValue" ParsingErrorMessage="Fix nullable integer value.">
		<InputGroupBeforeTemplate>€</InputGroupBeforeTemplate>
		<InputGroupAfterTemplate>.00</InputGroupAfterTemplate>
	</HxInputNumber>
	<HxInputNumber Label="Decimal" @bind-Value="@model.DecimalValue" ParsingErrorMessage="Fix decimal value." />
	<HxInputNumber Label="Decimal (nullable)" @bind-Value="@model.NullableDecimalValue" ParsingErrorMessage="Fix nullable decimal value." />
	<HxInputDate Label="Date" @bind-Value="@model.DateValue" ParsingErrorMessage="Fix date value." />
	<HxInputDate Label="Date (nullable)" @bind-Value="@model.NullableDateValue" ParsingErrorMessage="Fix nullable date value." />

	<HxInputCheckBox Label="CheckBox" @bind-Value="@model.BoolValue" />
	<HxInputSwitch Label="Switch" @bind-Value="@model.BoolValue" />

	<HxSubmit>Validate</HxSubmit>

</EditForm>

@code{
	protected DemoModel model = new DemoModel();

	public class DemoModel
	{
		[Required(ErrorMessage = "Enter text.")]
		[MaxLength(50, ErrorMessage = "Maximum length of text is 50 letters.")]
		public string Text { get; set; }

		public int IntegerValue { get; set; }

		public int? NullableIntegerValue { get; set; }

		public decimal DecimalValue { get; set; }

		public decimal? NullableDecimalValue { get; set; }

		public DateTime DateValue { get; set; }

		public DateTime? NullableDateValue { get; set; }

		public bool BoolValue { get; set; }
	}

}