<HxCard BodyCssClass="p-0">
    <HeaderTemplate>
        <HxTabPanel CssClass="card-header-tabs" ActiveTabIdChanged="TabIdChanged">
            @foreach (var tab in tabNames)
            {
                <HxTab Id="@tab" Title="@tab" />
            }
        </HxTabPanel>
    </HeaderTemplate>
    <BodyTemplate>
            <HxListLayout CardSettings="GetCardSettings(tabNames[0])" Title="Neutral cultures" TFilterModel="FilterModelDto">
                <DataTemplate>
                    <HxGrid ContentNavigationMode="GridContentNavigationMode.Pagination" TItem="CultureInfo" PageSize="10" DataProvider="LoadNeutralCultures">
                        <Columns>
                            <HxGridColumn TItem="CultureInfo" HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)"  />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)"  />
	
                        </Columns>
                    </HxGrid>
                </DataTemplate>
            </HxListLayout>
            
            <HxListLayout CardSettings="GetCardSettings(tabNames[1])" Title="Specific cultures" TFilterModel="FilterModelDto">
                <DataTemplate>
                    <HxGrid ContentNavigationMode="GridContentNavigationMode.Pagination" TItem="CultureInfo" PageSize="10" DataProvider="LoadSpecificCultures">
                        <Columns>
                            <HxGridColumn TItem="CultureInfo" HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)"  />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)"  />
	
                        </Columns>
                    </HxGrid>
                </DataTemplate>
            </HxListLayout>

            <HxListLayout CardSettings="GetCardSettings(tabNames[2])" Title="Installed cultures" TFilterModel="FilterModelDto">
                <DataTemplate>
                    <HxGrid ContentNavigationMode="GridContentNavigationMode.Pagination" TItem="CultureInfo" PageSize="10" DataProvider="LoadInstalledWin32Cultures">
                        <Columns>
                            <HxGridColumn TItem="CultureInfo" HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)"  />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)"  />
	
                        </Columns>
                    </HxGrid>
                </DataTemplate>
            </HxListLayout>
    </BodyTemplate>
</HxCard>

@code {
    private string activeTabId = "Neutral";
    private List<string> tabNames = new()
    {
        "Neutral cultures",
        "Specific cultures",
        "Installed cultures"
    };

    private void TabIdChanged(string tabId)
    {
        activeTabId = tabId;
        StateHasChanged();
    }

    private CardSettings cardSettings = new()
    {
        CssClass = "border-0" // Removing borders in order to fit the HxListLayout into the HxTabPanel nicely.
    };

    private CardSettings hiddenCardSettings = new()
    {
        CssClass = "d-none"
    };

    private CardSettings GetCardSettings(string tabName)
    {
        if (tabName == activeTabId)
        {
            return cardSettings;
        }
        else
        {
            return hiddenCardSettings;
        }
    }

    private Task<GridDataProviderResult<CultureInfo>> LoadInstalledWin32Cultures(GridDataProviderRequest<CultureInfo> request)
    {
        IEnumerable<CultureInfo> result = CultureInfo.GetCultures(CultureTypes.InstalledWin32Cultures).ToList();

        return Task.FromResult(request.ApplyTo(result));
    }

    private Task<GridDataProviderResult<CultureInfo>> LoadNeutralCultures(GridDataProviderRequest<CultureInfo> request)
    {
        IEnumerable<CultureInfo> result = CultureInfo.GetCultures(CultureTypes.NeutralCultures).ToList();

        return Task.FromResult(request.ApplyTo(result));
    }

    private Task<GridDataProviderResult<CultureInfo>> LoadSpecificCultures(GridDataProviderRequest<CultureInfo> request)
    {
        IEnumerable<CultureInfo> result = CultureInfo.GetCultures(CultureTypes.SpecificCultures).ToList();

        return Task.FromResult(request.ApplyTo(result));
    }

    public record FilterModelDto { }
}
