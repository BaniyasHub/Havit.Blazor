@attribute [Route("/components/" + nameof(HxInputTags))]

<ComponentApiDoc Type="typeof(HxInputTags)">

	<h3>Basic Usage</h3>
	<Demo Type="typeof(HxInputTags_Demo_Basic)" />

	<h3>Static suggestions</h3>
	<p>
		To offer fixed list of suggestions (simmilar to <code>HxSelect</code>), setup <code>DataProvider</code> to return those values (no matter the input)
		and use <code>@nameof(HxInputTags.SuggestDelay)="0"</code> together with <code>@nameof(HxInputTags.SuggestMinimumLength)="0"</code>.
	</p>
	<Demo Type="typeof(HxInputTags_Demo_FixedSuggestions)" />

	<h3>Restricted tags</h3>
	<p>If you want to restrict tags to suggested items only, set <code>@nameof(HxInputTags.AllowCustomTags)</code> to <code>false</code>.</p>
	<HxAlert Color="ThemeColor.Info">
		Current @nameof(HxInputTags) implementation for <code>AllowCustomTags="false""</code> allows adding tags only from suggestions (dropdown).
		Keyboard support might be implemented in future (we have to check the added tags with DataProvider to apply the restriction).
	</HxAlert>
	<Demo Type="typeof(HxInputTags_Demo_AllowCustomTags)" />

	<h3>Naked</h3>
	<p>Consider enabling <code>@nameof(HxInputTags.ShowAddButton)</code> when using <code>@nameof(HxInputTags.Naked)</code>.</p>
	<Demo Type="typeof(HxInputTags_Demo_Naked)" />

</ComponentApiDoc>