@attribute [Route("/components/" + nameof(HxInputTags))]

<ComponentApiDoc Type="typeof(HxInputTags)">
	<MainContent>
		<DocAlert Type="DocAlertType.Warning">
			<code>HxInputTags</code> does not support additional <code>InputGroups</code>. Learn more about them <a href="/components/Inputs#InputGroups">here</a>.
		</DocAlert>

		<h3 id="BasicUsage">Basic Usage</h3>
		<Demo Type="typeof(HxInputTags_Demo_Basic)" />

		<h3 id="StaticSuggestions">Static suggestions</h3>
		<p>
			To offer fixed list of suggestions (simmilar to <code>HxSelect</code>), setup <code>DataProvider</code> to return those values (no matter the input)
			and use <code>@nameof(HxInputTags.SuggestDelay)="0"</code> together with <code>@nameof(HxInputTags.SuggestMinimumLength)="0"</code>.
		</p>
		<Demo Type="typeof(HxInputTags_Demo_FixedSuggestions)" />

		<h3 id="NoSuggestions">No suggestions</h3>
		<p>If you don't want to use any suggestions and let the user add tags manualy, just leave the <code>DataProvider</code> unset (<code>null</code>).</p>
		<Demo Type="typeof(HxInputTags_Demo_NoSuggestions)" />

		<h3 id="RestrictedTags">Restricted tags</h3>
		<p>If you want to restrict tags to suggested items only, set <code>@nameof(HxInputTags.AllowCustomTags)</code> to <code>false</code>.</p>
		<DocAlert>
			Current @nameof(HxInputTags) implementation for <code>AllowCustomTags="false""</code> allows adding tags only from suggestions (dropdown).
			Keyboard support might be implemented in future (we have to check the added tags with DataProvider to apply the restriction).
		</DocAlert>
		<Demo Type="typeof(HxInputTags_Demo_AllowCustomTags)" />

		<h3 id="Colors">Colors</h3>
		<p>Use <code>TagBackgroundColor</code> and <code>TagTextColor</code> to adjust colors.</p>
		<Demo Type="typeof(HxInputTags_Demo_Colors)" />

		<h3 id="Naked">Naked</h3>
		<p>Consider enabling <code>@nameof(HxInputTags.ShowAddButton)</code> when using <code>@nameof(HxInputTags.Naked)</code>.</p>
		<Demo Type="typeof(HxInputTags_Demo_Naked)" />

		<h4 id="NakedSizes">Naked sizes</h4>
		<p>Use <code>InputSize</code> parameter.</p>
		<Demo Type="typeof(HxInputTags_Demo_Naked_InputSize)" />

		<h3 id="AddButtonText">Add-button text</h3>
		<p>You might want to set custom <code>@nameof(HxInputTags.AddButtonText)</code> especially for <code>@nameof(HxInputTags.Naked)</code> input.</p>
		<Demo Type="typeof(HxInputTags_Demo_Naked_AddButtonText)" />

		<h3 id="Disabled">Disabled</h3>
		<p>You can disable the input by setting <code>Enabled="false"</code>.</p>
		<Demo Type="typeof(HxInputTags_Demo_Disabled)" />
	</MainContent>

	<CssVariables>
		<ComponentApiDocCssVariable Name="--hx-input-tags-tag-margin-left" Default="0">
			Left margin of tags.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-tag-margin-right" Default=".25rem">
			Right margin of tags.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-tag-margin-y" Default=".125rem">
			Top and bottom margin of tags.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-tag-hover-opacity" Default=".1">
			Tag background color opacity on hover.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-input-width" Default="3em">
			Input width.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-input-placeholder-color" Default="var(--bs-gray-600)">
			Color of the placeholder input.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-naked-font-size-lg" Default="1.25em">
			Naked font size large.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-naked-font-size-sm" Default=".875em">
			Naked font size small.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-control-focused-box-shadow" Default="0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25)">
			Box shadow of the control when focused.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--hx-input-tags-control-focused-border-color" Default="rgba(var(--bs-primary-rgb), .3)">
			Border color of the control when focused (as the color is not exposed via CSS variables from Bootstrap, we use rgba derivate from --bs-primary-rgb and the color is not 100% accurate).
		</ComponentApiDocCssVariable>

	</CssVariables>

</ComponentApiDoc>