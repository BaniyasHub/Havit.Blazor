@attribute [Route("/components/" + nameof(HxDropdown))]
@attribute [Route("/components/HxDropdownToggle")]
@attribute [Route("/components/" + nameof(HxDropdownToggleElement))]
@attribute [Route("/components/" + nameof(HxDropdownMenu))]
@attribute [Route("/components/" + nameof(HxDropdownItem))]
@attribute [Route("/components/" + nameof(HxDropdownHeader))]
@attribute [Route("/components/" + nameof(HxDropdownDivider))]
@attribute [Route("/components/" + nameof(HxDropdownContent))]

@inherits PerformanceLoggingComponentBase
@using Components.HxNavDoc


<ComponentApiDoc Type="typeof(HxDropdown)">

    <SectionTitle Id="basic-usage">Basic usage</SectionTitle>
    <p>
        Use <code>HxDropdown</code> and <code>HxDropdownToggleElement</code> (with <code>ElementName="..."</code>) to create dropdown with custom toggler.
        (Usually you will add <code>role="button"</code> to apply pointer cursor type.)
    </p>
    <Demo Type="typeof(HxDropdown_Demo_Basic)" Tabs="false" />

    <SectionTitle Id="directions">Directions</SectionTitle>
    <Demo Type="typeof(HxDropdown_Demo_Directions)" />

    <SectionTitle Id="header-disabled-active">Header, Disabled, Active</SectionTitle>
    <p>Set <code>CssClass="active"</code> to highlight the item. (In case of <code>NavLink</code> functionality needed, separate <code>HxDropdownMenuNavLinkItem</code> will be implemented.)</p>
    <p>Set <code>Enabled="false"</code> to disable the item. The <code>HxFormState.Enabled</code> inheritance is also supported.</p>
    <Demo Type="typeof(HxDropdown_Demo_HeaderDisabledActive)" />

    <SectionTitle Id="custom-content">Custom content</SectionTitle>
    <p>Use <code>HxDropdownContent</code> instead of <code>HxDropdownMenu</code>.</p>
    <Demo Type="typeof(HxDropdown_Demo_CustomContent)" />


    <SectionTitle Id="offset-reference">Dropdown offset and reference</SectionTitle>
    <p>
        You can change the location of the dropdown by setting the <code>@nameof(HxDropdownToggleButton).@nameof(HxDropdownToggleButton.DropdownOffset)</code>
        and/or <code>@nameof(HxDropdownToggleButton).@nameof(HxDropdownToggleButton.DropdownReference)</code>.
    </p>
    <Demo Type="typeof(HxDropdown_Demo_DropdownOffsetAndReference)" />

    <SectionTitle Id="CustomReference">Reference to custom HTML element</SectionTitle>
    <p>
        Bootstrap's dropdown relies on specific structure where the dropdown-toggle and dropdown-menu are direct ancestors of common parent.
        When you cannot stick with this structure (e.g. by adding <code>Tooltip</code> wrapping the button with <code>span</code>), you have to use
        explicit <code>DropdownReference</code>.<br/>
        Specific structure of <code>#id</code> gets recognized and handed over to the underlying Bootstraps dropdown.
    </p>
    <DocAlert Type="DocAlertType.Danger">
        Bootstrap 5.1.3 does not handle HTMLElement-references correctly. This is already <a href="https://github.com/twbs/bootstrap/commit/5f1c542d677add524c94054ba8583269d81d87d0">fixed</a>, but not released.<br />
        You might get <code>TypeError: Failed to execute 'getComputedStyle' on 'Window': parameter 1 is not of type 'Element'.</code>
    </DocAlert>
    <Demo Type="typeof(HxDropdown_Demo_DropdownReference)" />

    <SectionTitle Id="autoclose-behavior">AutoClose behavior</SectionTitle>
    <p>By default, the dropdown menu is closed when clicking inside or outside the dropdown menu. You can use the <code>AutoClose</code> parameter to change this behavior of the dropdown.</p>
    <Demo Type="typeof(HxDropdown_Demo_AutoClose)" />

    <SectionTitle Id="NavWithDropdown" />
    <p>You can use <code>HxDropdown</code> inside <code><a href="/components/@nameof(HxNav)">@nameof(HxNav)</a></code>.</p>
    <Demo Type="typeof(HxNav_Demo_Dropdowns)" />

    <SectionTitle Id="dark">Dark dropdowns</SectionTitle>
    <p>Opt into darker dropdowns to match a dark navbar or custom style by adding <code>.dropdown-menu-dark</code> onto a <code>HxDropdownMenu</code> component.</p>
    <Demo Type="typeof(HxDropdown_Demo_Dark)" />
</ComponentApiDoc>

<ComponentApiDoc Type="typeof(HxDropdownToggleElement)" />
<ComponentApiDoc Type="typeof(HxDropdownMenu)" />
<ComponentApiDoc Type="typeof(HxDropdownHeader)" />
<ComponentApiDoc Type="typeof(HxDropdownItemNavLink)" />
<ComponentApiDoc Type="typeof(HxDropdownItem)" />
<ComponentApiDoc Type="typeof(HxDropdownItemText)" />
<ComponentApiDoc Type="typeof(HxDropdownDivider)" />
