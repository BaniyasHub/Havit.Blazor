@attribute [Route("/components/" + nameof(HxInputDateRange))]

<ComponentApiDoc Type="typeof(HxInputDateRange)">

	<DocAlert Type="DocAlertType.Warning">
		<HxIcon Icon="BootstrapIcon.ExclamationTriangleFill" /> <code>HxInputDateRange</code> does not support additional <code>InputGroups</code>. Learn more about them <a href="/components/Inputs#InputGroups">here</a>.
	</DocAlert>

	<h3>Basic Usage</h3>
	<Demo Type="typeof(HxInputDateRange_Demo)" Tabs="false" />

	<h3>Buttons in calendar</h3>
	<p>The <i>Clear</i> and <i>OK</i> buttons in calendars can be hidden by setting <code>ShowCalendarButtons="false"</code>.</p>
	<Demo Type="typeof(HxInputDateRange_Demo_CalendarButtons)" />

	<h3>Custom ranges</h3>
	<Demo Type="typeof(HxInputDateRange_Demo_CustomRanges)" />

	<h3>Dropdown calendars customization</h3>
	<p>
		You can change rendering of weekend days by defining your own CSS rule for <code>.weekend</code> class.
		The disabled days get <code>.disabled</code> class.
	</p>
	<DocAlert Type="DocAlertType.Warning">
		<HxIcon Icon="BootstrapIcon.ExclamationTriangleFill" /> Disabling dates with the techniques below won't prevent the user from entering disabled dates manualy. You still have to validate the value.
	</DocAlert>

	<h4>MinDate, MaxDate</h4>
	<p>You can limit the dropdown calendars (both <i>From</i> and <i>To</i> together) enabled dates by setting <code>MinDate</code> and/or <code>MaxDate</code>.</p>
	<Demo Type="typeof(HxInputDateRange_Demo_MinDateMaxDate)" />

	<h4>Calendars date customization</h4>
	<p>
		You can customize the dropdown calendars' dates with <code>CalendarDateCustomizationProvider</code>. You can disable individual dates
		(<code>Enabled="false"</code>) or set specific CSS class (<code>CssClass="...")</code>.
	</p>
	<Demo Type="typeof(HxInputDateRange_Demo_CalendarDateCustomization)" />

</ComponentApiDoc>