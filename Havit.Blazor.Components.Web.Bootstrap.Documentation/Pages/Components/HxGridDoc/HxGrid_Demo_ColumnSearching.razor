@using System.Globalization;

<HxGrid @ref="grid" TItem="CultureInfo" Responsive="true" DataProvider="GetGridData" PageSize="10">
	<Columns>
		<HxGridColumn HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())">
			<HeaderTemplate>
				<HxInputText @bind-Value="lcidSearchString" @onfocusout="RefreshData" />
			</HeaderTemplate>
		</HxGridColumn>
		<HxGridColumn HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)">
			<HeaderTemplate>
				<HxInputText @bind-Value="displayNameSearchString" @onfocusout="RefreshData" />
			</HeaderTemplate>
		</HxGridColumn>
		<HxGridColumn HeaderText="Name" ItemTextSelector="@(item => item.Name)">
			<HeaderTemplate>
				<HxInputText @bind-Value="nameSearchString" @onfocusout="RefreshData" />
			</HeaderTemplate>
		</HxGridColumn>
		<HxGridColumn HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)">
			<HeaderTemplate>
				<HxInputText @bind-Value="englishNameSearchString" @onfocusout="RefreshData" />
			</HeaderTemplate>
		</HxGridColumn>
	</Columns>
</HxGrid>

@code {
	private List<CultureInfo> localCultureInfos = CultureInfo.GetCultures(CultureTypes.AllCultures).ToList();
	private string lcidSearchString = string.Empty, displayNameSearchString = string.Empty, nameSearchString = string.Empty, englishNameSearchString = string.Empty;

	private HxGrid<CultureInfo> grid;

	private Task<GridDataProviderResult<CultureInfo>> GetGridData(GridDataProviderRequest<CultureInfo> request)
	{
		// Remove items not containing the search strings. Where statements were separated to increase readability.
		var filteredCultureInfos = localCultureInfos?
			.Where(i => i.LCID.ToString().Contains(lcidSearchString))
			.Where(i => i.DisplayName?.Contains(displayNameSearchString) ?? true)
			.Where(i => i.Name?.Contains(nameSearchString) ?? true)
			.Where(i => i.EnglishName?.Contains(englishNameSearchString) ?? true) ?? new List<CultureInfo>();

		return Task.FromResult(request.ApplyTo(filteredCultureInfos));
	}

	private async Task RefreshData()
	{
		await grid.RefreshDataAsync();
	}
}
