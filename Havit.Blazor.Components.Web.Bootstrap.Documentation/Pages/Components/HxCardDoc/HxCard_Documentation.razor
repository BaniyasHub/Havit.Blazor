@page "/components/hxcard"

<h1>@nameof(HxCard)</h1>
<p class="lead">
	Basic skinnable <a href="https://getbootstrap.com/docs/5.0/components/card/">Bootstrap Card</a>.
</p>

<h3>Properties</h3>
<ul>
	<li>
		<strong>@nameof(HxCard.CssClass)</strong><br />
		Additional CSS classes for the card-container.
	</li>
	<li>
		<strong>@nameof(HxCard.Skin)</strong><br />
		Skin to be applied.<br />
		You can set a default skin to <strong>@nameof(CardSkin).@nameof(CardSkin.Default)</strong>. It will be applied to any HxCard without explicit skin specified.
	</li>
</ul>

<div class="alert alert-info">
	<h5>Careful when combining Skin with CssClass!</h5>
	The <code>@nameof(HxCard).@nameof(HxCard.CssClass)</code> will be added to the base <code>@nameof(HxCard).@nameof(HxCard.Skin).@nameof(CardSkin.CssClass)</code>
	(or <code>@nameof(CardSkin).@nameof(CardSkin.Default).@nameof(CardSkin.CssClass)</code> respectively).<br />
	Please note: Some of the CSS classes can behave weird when combined together, especially <a href="https://getbootstrap.com/docs/5.0/utilities/">utility classes</a> with <code>!important</code> modifier.<br/>
	Eg. for <code>class="m-3 m-5"</code> the <code>m-5</code> wins, but for <code>class="m-3 m-2"</code> the <code>m-3</code> wins.
</div>

<Demo Type="typeof(HxCard_Demo)" />
