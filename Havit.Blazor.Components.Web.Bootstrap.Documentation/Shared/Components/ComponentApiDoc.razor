<h1>@RemoveSpecialCharacters(Type.Name)</h1>
@if (!String.IsNullOrWhiteSpace(classMember?.Comments?.Summary))
{
<p class="lead">@((MarkupString)classMember.Comments.Summary)</p>
}

@ChildContent

<h2>API</h2>

@if (properties.Count > 0)
{
	<h3>Properties</h3>
}
<ul>
	@foreach (var property in properties)
	{
		<li>
			@if (property.PropertyInfo.GetAccessors(false).Any(o => o.IsStatic))
			{
				@("static ")
			}
			<strong>@property.PropertyInfo.Name</strong> <i>(@FormatType(property.PropertyInfo.PropertyType))</i>
			<br />
			<div class="summary">@((MarkupString)property.Comments.Summary)</div>
		</li>
	}
</ul>

@if (events.Count > 0)
{
	<h3>Events</h3>
}
<ul>
	@foreach (var currentEvent in events)
	{
		<li>
			<strong>@currentEvent.PropertyInfo.Name</strong>
			<br />
			<div class="summary">@((MarkupString)currentEvent.Comments.Summary)</div>
		</li>
	}
</ul>

@if (methods.Count > 0)
{
	<h3>Methods</h3>
}
<ul>
	@foreach (var method in methods)
	{
		<li>
			<strong></strong> <i>@FormatType(method.MethodInfo.ReturnType)</i> <strong>@method.MethodInfo.Name</strong> @method.GetParameters()
			<br />
			<div class="summary">@((MarkupString)method.Comments.Summary)</div>
		</li>
	}
</ul>

@if (staticMethods.Count > 0)
{
	<h3>Static Methods</h3>
}
<ul>
	@foreach (var method in staticMethods)
	{
		<li>
			<strong></strong> <i>@FormatType(method.MethodInfo.ReturnType)</i> <strong>@method.MethodInfo.Name</strong> @method.GetParameters()
			<br />
			<div class="summary">@((MarkupString)method.Comments.Summary)</div>
		</li>
	}
</ul>
