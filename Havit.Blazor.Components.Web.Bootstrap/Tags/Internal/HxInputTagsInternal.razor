@namespace Havit.Blazor.Components.Web.Bootstrap.Internal

<div id="@dropdownId" class="@CssClassHelper.Combine("dropdown", (LabelTypeEffective == Havit.Blazor.Components.Web.Bootstrap.LabelType.Floating) ? "form-floating" : null)">
	<div class="hx-input-tags form-control d-flex position-relative flex-grow-1 flex-wrap">
		<div class="d-flex align-items-center flex-wrap">
			@foreach (string tag in Value)
			{
			<HxTagInternal Text="@tag" OnRemoveClick="async() => await HandleRemoveClickAsync(tag)" />
			}
		</div>
		<HxInputTagsAutosuggestInput @ref="autosuggestInput"
									 InputId="@InputId"
									 EnabledEffective="@EnabledEffective"
									 Value="@userInput"
									 OnInputInput="HandleInputInput"
									 OnInputFocus="HandleInputFocus"
									 OnInputBlur="HandleInputBlur"
									 OnInputMouseDown="HandleInputMouseDown"
									 OnInputKeyDown="HandleInputKeyDown"
									 Placeholder="@((Value?.Any() ?? false) ? null : Placeholder)"
									 CssClass="@InputCssClass"
									 Offset="@InputOffset" />
		@if (dataProviderInProgress)
		{
		<HxSpinner Type="SpinnerType.Border" Size="SpinnerSize.Small" />
		}
		<HxAutosuggestItems TItem="string" Items="@suggestions" OnItemClick="HandleItemClick">
			<ItemTemplate>
				@context
			</ItemTemplate>
		</HxAutosuggestItems>
	</div>
</div>