@namespace Havit.Blazor.Components.Web.Bootstrap.Internal

<div class="@CssClassHelper.Combine("hx-inputtags-form-control", GetFormControlCssClasses(), "d-flex position-relative flex-grow-1 flex-wrap align-items-center", this.CssClass)">
	@* <div class="d-flex align-items-center flex-wrap"> *@
	@foreach (string tag in ValueEffective)
	{
		<HxTagInternal Text="@tag" OnIconClick="async() => await HandleRemoveClickAsync(tag)" />
	}
	@* </div> *@
	@if (ShowAddButtonEffective && !currentlyFocused && !isDropdownOpened)
	{
		<HxTagInternal Icon="BootstrapIcon.Plus" OnIconClick="async() => await autosuggestInput.FocusAsync()" />
	}
	<div id="@dropdownId" class="@CssClassHelper.Combine("dropdown", (LabelTypeEffective == Havit.Blazor.Components.Web.Bootstrap.LabelType.Floating) ? "form-floating" : null)">
		<HxInputTagsAutosuggestInput @ref="autosuggestInput"
									 InputId="@InputId"
									 EnabledEffective="@EnabledEffective"
									 Value="@userInput"
									 OnInputInput="HandleInputInput"
									 OnInputFocus="HandleInputFocus"
									 OnInputBlur="HandleInputBlur"
									 OnInputMouseDown="HandleInputMouseDown"
									 OnInputKeyDown="HandleInputKeyDown"
									 Placeholder="@(ValueEffective.Any() ? null : Placeholder)"
									 CssClass="@InputCssClass"
									 Offset="@InputOffset" />
		@if (dataProviderInProgress)
		{
			<HxSpinner Type="SpinnerType.Border" Size="SpinnerSize.Small" />
		}
		<HxAutosuggestItems TItem="string" Items="@suggestions" OnItemClick="HandleItemClick">
			<ItemTemplate>
				@context
			</ItemTemplate>
		</HxAutosuggestItems>
	</div>
</div>