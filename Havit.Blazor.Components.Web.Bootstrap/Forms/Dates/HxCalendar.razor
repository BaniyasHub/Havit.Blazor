@namespace Havit.Blazor.Components.Web.Bootstrap

@{
	var renderData = GetRenderData();
}

<div class="calendar">
	<div class="navigation">
		<div role="button" @onclick="HandlePreviousMonthClick" >
			<HxIcon Icon="@BootstrapIcon.ChevronLeft"/>
		</div>

		<select class="form-select form-select-sm mx-2" @onchange="HandleYearChange" @onclick:stopPropagation>
			@foreach (int year in renderData.Years)
			{
				<option value="@year" selected="@(year == DisplayMonth.Year)">@year.ToString("G")</option>
				/* not "N" - we do not want thousands separator */
			}
		</select>

		<select class="form-select form-select-sm mx-2" @onchange="HandleMonthChange" @onclick:stopPropagation>
			@for (int monthIndex = 0; monthIndex < renderData.Months.Count; monthIndex++)
			{
				<option value="@monthIndex" selected="@((monthIndex + 1) == DisplayMonth.Month)">@renderData.Months[monthIndex]</option>
			}
		</select>

		<div role="button" @onclick="HandleNextMonthClick" >
			<HxIcon Icon="@BootstrapIcon.ChevronRight"/>
		</div>
	</div>

	<table>
		<tr class="day-names fw-bold">
			@foreach (string dayOfWeek in renderData.DaysOfWeek)
			{
				<td>@dayOfWeek</td>
			}
		</tr>
		@foreach (WeekData week in renderData.Weeks)
		{
			<tr role="button" class="week">
				@foreach (DayData day in week.Days)
				{
					<td class="@day.CssClass">@day.DayInMonth</td>
					// TODO: Disabled, atp. Onclick
				}
			</tr>
		}
	</table>
</div>