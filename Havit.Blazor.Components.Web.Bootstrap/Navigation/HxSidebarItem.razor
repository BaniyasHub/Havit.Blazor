@namespace Havit.Blazor.Components.Web.Bootstrap
<div>
	@if (!HasExpandableContent)
	{
		<HxNavLink Href="@Href"
				   CssClass="@CssClassHelper.Combine(this.DropdownContainer is not null ? "dropdown-item" : null, this.CssClass)"
				   Match="this.Match"
				   Enabled="this.Enabled">

			@* To hide the nav-content in mobile view *@
			<div data-bs-toggle="collapse" data-bs-target=".navbar-collapse.show" class="flex-grow-1">

				<div class="align-items-center">
					@if (Icon != null)
					{
						<HxIcon Icon="Icon" />
					}
					<span class="@CssClassHelper.Combine("text", Icon == null ? null : "ms-3")">
						@Text
					</span>
				</div>

			</div>
		</HxNavLink>
	}
	else
	{
		<HxDropdown Direction="DropdownDirection.End" CssClass="hx-sidebar-item">

			@* CSS Isolation (.nav-item not needed) *@

			<HxNavLink Href="@Href"
					   CssClass="@CssClassHelper.Combine(this.CssClass)"
					   Match="this.Match"
					   Enabled="this.Enabled"
					   role="button"
					   data-bs-toggle="@(HasExpandableContent ? ((ParentSidebar.Collapsed) ? "dropdown": "collapse") : null)"
					   data-bs-target="@(HasExpandableContent && !ParentSidebar.Collapsed ? "#" + id : null)"
					   aria-expanded="@(HasExpandableContent ? "false" : null)">
				<div class="d-flex align-items-center">
					@if (Icon != null)
					{
						<HxIcon Icon="Icon" />
					}
					<span class="@CssClassHelper.Combine("text", Icon == null ? null : "ms-3")">
						@Text
					</span>
					@if (HasExpandableContent)
					{
						<HxIcon Icon="@BootstrapIcon.ChevronRight" CssClass="expand-icon ms-auto" />
					}
				</div>

			</HxNavLink>

			@if (ParentSidebar.Collapsed)
			{
				<HxDropdownMenu CssClass="hx-sidebar-subitems">
					@ChildContent
				</HxDropdownMenu>
			}

		</HxDropdown>

		@if (!ParentSidebar.Collapsed)
		{
			<div class="hx-sidebar-subitems collapse" id="@id">
				<nav class="nav flex-column">
					@ChildContent
				</nav>
			</div>
		}
	}
</div>