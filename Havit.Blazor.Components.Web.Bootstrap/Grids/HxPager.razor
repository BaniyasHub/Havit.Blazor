@namespace Havit.Blazor.Components.Web.Bootstrap
@{
	int pageFromInclusive = ((this.CurrentPageIndex / this.DisplayNumberCount) * this.DisplayNumberCount);
	int pageToExclusive = Math.Min(TotalPages, pageFromInclusive + this.DisplayNumberCount);
	bool showFirstLast = true; // always
	bool showPreviousNext = true; // always

	string previousPageItemDisabledCssClass = CssClassHelper.Combine("page-item", (CurrentPageIndex == 0) ? "disabled" : null);
	string nextPageItemDisabledCssClass = CssClassHelper.Combine("page-item", (CurrentPageIndex == TotalPages - 1) ? "disabled" : null);
}

<ul role="button" class="hx-pager pagination">

	@if (showFirstLast)
	{
		<li class="@previousPageItemDisabledCssClass">
			<a class="page-link" @onclick="async () => await SetCurrentPageIndexTo(0)">
				<HxIcon Icon="@BootstrapIcon.ChevronDoubleLeft" />
			</a>
		</li>
	}

	@if (showPreviousNext)
	{
		<li class="@previousPageItemDisabledCssClass">
			<a class="page-link" @onclick="async () => await SetCurrentPageIndexTo(CurrentPageIndex - 1)">
				<HxIcon Icon="@BootstrapIcon.ChevronLeft" />
			</a>
		</li>
	}

	@if (pageFromInclusive > 0)
	{
		<li class="page-item"><a class="page-link" @onclick="async () => await SetCurrentPageIndexTo(pageFromInclusive - 1)">...</a></li>
	}

	@for (int i = pageFromInclusive; i < pageToExclusive; i++)
	{
		int j = i;
		if (i == CurrentPageIndex)
		{
			<li class="page-item active">
				<a class="page-link">@((j + 1).ToString())</a>
			</li>
		}
		else
		{
			<li class="page-item"><a class="page-link" @onclick="async () => await SetCurrentPageIndexTo(j)">@((j + 1).ToString("N0"))</a></li>
		}
	}

	@if (pageToExclusive < (this.TotalPages - 1))
	{
		<li class="page-item"><a class="page-link" @onclick="async () => await SetCurrentPageIndexTo(pageToExclusive)">...</a></li>
	}

	@if (showPreviousNext)
	{
		<li class="@nextPageItemDisabledCssClass">
			<a class="page-link" @onclick="async () => await SetCurrentPageIndexTo(CurrentPageIndex + 1)">
				<HxIcon Icon="@BootstrapIcon.ChevronRight" />
			</a>
		</li>
	}

	@if (showFirstLast)
	{
		<li class="@nextPageItemDisabledCssClass">
			<a class="page-link" @onclick="async () => await SetCurrentPageIndexTo(TotalPages - 1)">
				<HxIcon Icon="@BootstrapIcon.ChevronDoubleRight" />
			</a>
		</li>
	}
</ul>
