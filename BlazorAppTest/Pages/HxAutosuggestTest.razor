@page "/HxAutosuggestTest"
@using System.Globalization

<h1>HxAutosuggest</h1>

<HxAutosuggest Label="Full (with initial value)" TItemType="CultureInfo" TValueType="int" @bind-Value="@value1" DataProvider="ProvideSuggestions" ValueSelector="(CultureInfo c) => c.LCID" TextSelector="c => c.EnglishName" ItemFromValueResolver="(int lcid) => Task.FromResult(CultureInfo.GetCultureInfo(lcid))" />
<p>Value: @value1</p>

<HxAutosuggest Label="Select-only (no ItemFromValueResolver)" TItemType="CultureInfo" TValueType="int" @bind-Value="@value2" DataProvider="ProvideSuggestions" ValueSelector="(CultureInfo c) => c.LCID" TextSelector="c => c.EnglishName" Placeholder="Type culture name..." />
<p>Value: @value2</p>


@code
{
	private int value1 = 1029; // default value to display
	private int value2; // no default value

	private Task<AutosuggestDataProviderResult<CultureInfo>> ProvideSuggestions(AutosuggestDataProviderRequest request)
	{
		return Task.FromResult(new AutosuggestDataProviderResult<CultureInfo>
		{
			Data = CultureInfo.GetCultures(CultureTypes.SpecificCultures)
								.Where(c => c.LCID != 4096) // see Remarks: https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.lcid?view=net-5.0#System_Globalization_CultureInfo_LCID
								.Where(c => c.EnglishName?.Contains(request.UserInput, StringComparison.CurrentCultureIgnoreCase) ?? false)
								.OrderBy(c => c.EnglishName)
								.Take(10)
								.ToList()
		});
	}
}