@page "/HxInputTagsTest"
@using FluentValidation

<h1>HxInputTags</h1>

<EditForm Model="model">
	<Blazored.FluentValidation.FluentValidationValidator />
	<ValidationSummary />
	<HxInputTags Label="Tags" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" />
	<HxInputTags Label="Tags (shared Value, Large)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Large" />
	<HxInputTags Label="Tags (shared Value, Small)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Small" />
	<HxInputTags ShowAddButton="true" AddButtonText="Add tag" Naked Label="Tags Naked" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" />
	<HxInputTags ShowAddButton="true" AddButtonText="Add tag" Naked Label="Tags (shared Value, Large, Naked)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Large" />
	<HxInputTags ShowAddButton="true" AddButtonText="Add tag" Naked Label="Tags (shared Value, Small, Naked)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Small" />
	<HxSubmit CssClass="mt-2" Color="ThemeColor.Primary">Submit</HxSubmit>
</EditForm>

@code {
	private MyModel model = new MyModel();

	private Task<InputTagsDataProviderResult> GetNewItemSuggestions(InputTagsDataProviderRequest request)
	{
		return Task.FromResult(new InputTagsDataProviderResult()
		{
			Data = Enum.GetValues<ThemeColor>().Select(v => v.ToString())
		});
	}

	public class MyModel
	{
		public List<string> Tags { get; set; } = new List<string>() { "Blazor", "C#", "ASP.NET" };

		public class MyModelValidator : AbstractValidator<MyModel>
		{
			public MyModelValidator()
			{
				RuleFor(a => a.Tags).Must(t => t.Count > 3).WithMessage("At least 4 tags have to be entered.");
			}
		}
	}
}
