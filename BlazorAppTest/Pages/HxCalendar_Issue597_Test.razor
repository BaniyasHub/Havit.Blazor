@page "/HxCalendar_Issue597_Test"
@using BlazorAppTest.Pages.HxCalendarComponents;
@implements IDisposable
@inject NavigationManager NavigationManager
@inject IServiceProvider ServiceProvider
<h1>HxCalendar</h1>
<fieldset class="m-2 p-2">
    <label>From DI/TimeProvider.System: @(diOrSystemTimeProvider.LocalTimeZone.Id)</label>
    <p>
        <a href="/HxCalendar_Issue597_Test?tz=UTC-11">American Samoa</a> |
        <a href="/HxCalendar_Issue597_Test?tz=Samoa Standard Time">Samoa</a> |
        <a href="/HxCalendar_Issue597_Test">System</a>
    </p>
    <div>
        <HxCalendar @key="diOrSystemTimeProvider.LocalTimeZone.Id" />
    </div>
</fieldset>

<CascadingValue Value="cascadingTimeProvider" IsFixed="true">
    <fieldset class="m-2 p-2">
        <label>From CascadingValue: @(cascadingTimeProvider.LocalTimeZone.Id)</label>
        <div><HxCalendar /></div>
    </fieldset>
</CascadingValue>

<fieldset class="m-2 p-2">
    <label>From Parameter: @(parameterTimeProvider.LocalTimeZone.Id)</label>
    <div><HxCalendar TimeProvider="parameterTimeProvider" /></div>
</fieldset>

@code {
    TimeProvider cascadingTimeProvider = new ZonedTimeProvider(TimeZoneInfo.FindSystemTimeZoneById("UTC-11"));
    TimeProvider parameterTimeProvider = new ZonedTimeProvider(TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time"));
    TimeProvider diOrSystemTimeProvider;

    public override Task SetParametersAsync(ParameterView parameters)
    {
        diOrSystemTimeProvider = ServiceProvider.GetService<TimeProvider>() ?? TimeProvider.System;

        NavigationManager.LocationChanged += HandleNavigation;
        return base.SetParametersAsync(parameters);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected void HandleNavigation(object sender, LocationChangedEventArgs ev)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleNavigation;
    }
}
