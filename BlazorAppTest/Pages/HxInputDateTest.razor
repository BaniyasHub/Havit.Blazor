@page "/HxInputDateTest"
@namespace System.ComponentModel.DataAnnotations

<EditForm Model="@model">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<HxInputDate Label="HxInputDate (default, DateTime) InputSize: Regular" @bind-Value="@model.DateTime" />
	<HxInputDate InputSize="InputSize.Small" Label="HxInputDate (default, DateTime) InputSize: Small" @bind-Value="@model.DateTime" />
	<HxInputDate InputSize="InputSize.Large" Label="HxInputDate (default, DateTime) InputSize: Large" @bind-Value="@model.DateTime" />
	<HxInputDate Label="HxInputDate (default, DateTime?)" @bind-Value="@model.NullableDateTime" Placeholder="Datum narození" />
	<HxInputDate Label="HxInputDate (default, DateTimeOffset)" @bind-Value="@model.DateTimeOffset" />
	<HxInputDate Label="HxInputDate (default, DateTimeOffset?)" @bind-Value="@model.NullableDateTimeOffset" />
	<HxInputDate Label="HxInputDate (bez CustomDates, bez validací)" @bind-Value="@model.DateTime" UseDefaultDates="false" ShowValidationMessage="false" />
	<HxInputDate Label="HxInputDate (s vlastními CustomDates)" @bind-Value="@model.DateTime" CustomDates="@GetCustomDates()" />
	<HxInputDate Label="HxInputDate (disabled)" @bind-Value="@model.DateTime" CustomDates="@GetCustomDates()" Enabled="false" />
	<HxInputDate Label="HxInputDate (s CalendarIcon)" @bind-Value="@model.DateTime" CalendarIcon="BootstrapIcon.Calendar" />
	<HxInputDate Label="HxInputDate (s CalendarIcon, bez DefaultDates)" @bind-Value="@model.DateTime" CalendarIcon="BootstrapIcon.Calendar" UseDefaultDates="false" />
	<HxInputDate Label="HxInputDate (s MinDate, MaxDate)" @bind-Value="@model.DateTime" MinDate="new DateTime(1920, 3, 1)" MaxDate="new DateTime(1999, 6, 30)" UseDefaultDates="false" />

	<button type="submit">Submit</button>
</EditForm>

@code {
	private FormModel model = new FormModel();

	private IEnumerable<DateItem> GetCustomDates()
	{
		DateTime today = DateTime.Today;
		yield return new DateItem { Label = "First of month", Date = new DateTime(today.Year, today.Month, 1) };
		yield return new DateItem { Label = "Tomorrow", Date = today.AddDays(1) };
	}

	private class FormModel : IValidatableObject
	{
		public DateTime DateTime { get; set; } = DateTime.Today;
		public DateTime? NullableDateTime { get; set; }
		public DateTimeOffset DateTimeOffset { get; set; }
		public DateTimeOffset NullableDateTimeOffset { get; set; }

		public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
		{
			if (DateTime.Year != 2020)
			{
				yield return new ValidationResult("Date has to fall in year 2020.", new string[] { nameof(DateTime) });
			}
		}
	}
}