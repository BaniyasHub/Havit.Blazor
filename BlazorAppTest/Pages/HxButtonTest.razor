@page "/HxButtonTest"

<h1>HxButton</h1>

<HxButton Skin="@ButtonSkins.OK" Icon="BootstrapIcon.Bicycle" OnClick="HandleOKClick" Spinner="true" />
<HxButton Skin="@ButtonSkins.Cancel" Size="ButtonSize.Large" OnClick="HandleCancelClick" Spinner="true" />
<HxButton Icon="BootstrapIcon.X" Skin="@ButtonSkins.Save" />

<HxButton Text="Click me..." Color="ThemeColor.Warning" />
<HxButton Text="Outline..." Color="ThemeColor.Danger" Outlined="true" />
<HxButton Icon="BootstrapIcon.X" Color="ThemeColor.Warning" />

<HxButtonGroup>
	<HxButton Text="Button 1" Color="ThemeColor.Secondary" />
	<HxButton Text="Button 2" Color="ThemeColor.Secondary" />
	<HxButton Text="Button 3" Color="ThemeColor.Secondary" />
</HxButtonGroup>

<div class="card mt-4" @onclick="HandleCardClick">
	<div class="card-header">OnClickStopPropagationTest</div>
	<div class="card-body">
		<HxButton Text="OnClickStopPropagation=true (default)" Color="ThemeColor.Secondary" />
		<HxButton Text="OnClickStopPropagation=false" Color="ThemeColor.Secondary" OnClickStopPropagation="false" />
	</div>
	<div class="card-footer">
		Last captured click: @lastCapturedClick
	</div>
</div>

@code
{
	private DateTime? lastCapturedClick = null;

	private Task HandleCardClick()
	{
		lastCapturedClick = DateTime.Now;

		return Task.CompletedTask;
	}

	private void HandleOKClick()
	{
		System.Threading.Thread.Sleep(3000);
	}

	private async Task HandleCancelClick()
	{
		await Task.Delay(3000);
		StateHasChanged();
		await Task.Delay(3000);
	}
}
